// Generated by CoffeeScript 1.6.3
(function() {
  var Backbone, Project, async, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Backbone = require('backbone');

  async = require('async');

  Project = (function(_super) {
    __extends(Project, _super);

    function Project() {
      _ref = Project.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Project.prototype.urlRoot = '/projects';

    Project.prototype.sync = require('backbone-orm').sync(Project);

    return Project;

  })(Backbone.Model);

  async.each([1, 2, 3, 4, 5, 6, 7, 8, 9], (function(index, callback) {
    return Project.findOrCreate({
      index: index,
      name: "Project " + index
    }, callback);
  }), function(err) {
    return Project.find(function(err, models) {
      var model, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = models.length; _i < _len; _i++) {
        model = models[_i];
        _results.push(console.log(model.get('name')));
      }
      return _results;
    });
  });

}).call(this);
